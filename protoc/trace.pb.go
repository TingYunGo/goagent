// Code generated by protoc-gen-go. DO NOT EDIT.
// source: trace.proto

package protoc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TracerType int32

const (
	TracerType_Java      TracerType = 0
	TracerType_Database  TracerType = 1
	TracerType_Redis     TracerType = 2
	TracerType_Memcached TracerType = 3
	TracerType_Mongo     TracerType = 4
	TracerType_External  TracerType = 5
	TracerType_MQP       TracerType = 6
	TracerType_MQC       TracerType = 7
)

var TracerType_name = map[int32]string{
	0: "Java",
	1: "Database",
	2: "Redis",
	3: "Memcached",
	4: "Mongo",
	5: "External",
	6: "MQP",
	7: "MQC",
}

var TracerType_value = map[string]int32{
	"Java":      0,
	"Database":  1,
	"Redis":     2,
	"Memcached": 3,
	"Mongo":     4,
	"External":  5,
	"MQP":       6,
	"MQC":       7,
}

func (x TracerType) String() string {
	return proto.EnumName(TracerType_name, int32(x))
}

func (TracerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0}
}

type HttpMethod int32

const (
	HttpMethod_UNKNOWN HttpMethod = 0
	HttpMethod_GET     HttpMethod = 1
	HttpMethod_POST    HttpMethod = 2
	HttpMethod_PUT     HttpMethod = 3
	HttpMethod_DELETE  HttpMethod = 4
	HttpMethod_HEAD    HttpMethod = 5
	HttpMethod_CONNECT HttpMethod = 6
	HttpMethod_OPTIONS HttpMethod = 7
	HttpMethod_TRACE   HttpMethod = 8
	HttpMethod_PATCH   HttpMethod = 9
)

var HttpMethod_name = map[int32]string{
	0: "UNKNOWN",
	1: "GET",
	2: "POST",
	3: "PUT",
	4: "DELETE",
	5: "HEAD",
	6: "CONNECT",
	7: "OPTIONS",
	8: "TRACE",
	9: "PATCH",
}

var HttpMethod_value = map[string]int32{
	"UNKNOWN": 0,
	"GET":     1,
	"POST":    2,
	"PUT":     3,
	"DELETE":  4,
	"HEAD":    5,
	"CONNECT": 6,
	"OPTIONS": 7,
	"TRACE":   8,
	"PATCH":   9,
}

func (x HttpMethod) String() string {
	return proto.EnumName(HttpMethod_name, int32(x))
}

func (HttpMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{1}
}

type UserInfoOriginType int32

const (
	UserInfoOriginType_SELF    UserInfoOriginType = 0
	UserInfoOriginType_SERVER  UserInfoOriginType = 1
	UserInfoOriginType_APP     UserInfoOriginType = 2
	UserInfoOriginType_BROWSER UserInfoOriginType = 3
	UserInfoOriginType_NETWORK UserInfoOriginType = 4
)

var UserInfoOriginType_name = map[int32]string{
	0: "SELF",
	1: "SERVER",
	2: "APP",
	3: "BROWSER",
	4: "NETWORK",
}

var UserInfoOriginType_value = map[string]int32{
	"SELF":    0,
	"SERVER":  1,
	"APP":     2,
	"BROWSER": 3,
	"NETWORK": 4,
}

func (x UserInfoOriginType) String() string {
	return proto.EnumName(UserInfoOriginType_name, int32(x))
}

func (UserInfoOriginType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{2}
}

type ActionTraces struct {
	Traces               []*ActionTrace `protobuf:"bytes,1,rep,name=traces,proto3" json:"traces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ActionTraces) Reset()         { *m = ActionTraces{} }
func (m *ActionTraces) String() string { return proto.CompactTextString(m) }
func (*ActionTraces) ProtoMessage()    {}
func (*ActionTraces) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{0}
}

func (m *ActionTraces) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionTraces.Unmarshal(m, b)
}
func (m *ActionTraces) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionTraces.Marshal(b, m, deterministic)
}
func (m *ActionTraces) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionTraces.Merge(m, src)
}
func (m *ActionTraces) XXX_Size() int {
	return xxx_messageInfo_ActionTraces.Size(m)
}
func (m *ActionTraces) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionTraces.DiscardUnknown(m)
}

var xxx_messageInfo_ActionTraces proto.InternalMessageInfo

func (m *ActionTraces) GetTraces() []*ActionTrace {
	if m != nil {
		return m.Traces
	}
	return nil
}

type ActionTrace struct {
	Time                 int64        `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Tid                  string       `protobuf:"bytes,2,opt,name=tid,proto3" json:"tid,omitempty"`
	Rid                  string       `protobuf:"bytes,3,opt,name=rid,proto3" json:"rid,omitempty"`
	Refid                string       `protobuf:"bytes,4,opt,name=refid,proto3" json:"refid,omitempty"`
	Duration             int64        `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Tmd5                 string       `protobuf:"bytes,6,opt,name=tmd5,proto3" json:"tmd5,omitempty"`
	Action               string       `protobuf:"bytes,7,opt,name=action,proto3" json:"action,omitempty"`
	Cross                string       `protobuf:"bytes,9,opt,name=cross,proto3" json:"cross,omitempty"`
	UnableBack           bool         `protobuf:"varint,10,opt,name=unableBack,proto3" json:"unableBack,omitempty"`
	User                 *UserInfo    `protobuf:"bytes,12,opt,name=user,proto3" json:"user,omitempty"`
	Detail               *TraceDetail `protobuf:"bytes,13,opt,name=detail,proto3" json:"detail,omitempty"`
	Ip                   string       `protobuf:"bytes,14,opt,name=ip,proto3" json:"ip,omitempty"`
	Method               HttpMethod   `protobuf:"varint,15,opt,name=method,proto3,enum=protoc.HttpMethod" json:"method,omitempty"`
	Status               int32        `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`
	Url                  string       `protobuf:"bytes,17,opt,name=url,proto3" json:"url,omitempty"`
	NoSample             bool         `protobuf:"varint,18,opt,name=noSample,proto3" json:"noSample,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ActionTrace) Reset()         { *m = ActionTrace{} }
func (m *ActionTrace) String() string { return proto.CompactTextString(m) }
func (*ActionTrace) ProtoMessage()    {}
func (*ActionTrace) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{1}
}

func (m *ActionTrace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionTrace.Unmarshal(m, b)
}
func (m *ActionTrace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionTrace.Marshal(b, m, deterministic)
}
func (m *ActionTrace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionTrace.Merge(m, src)
}
func (m *ActionTrace) XXX_Size() int {
	return xxx_messageInfo_ActionTrace.Size(m)
}
func (m *ActionTrace) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionTrace.DiscardUnknown(m)
}

var xxx_messageInfo_ActionTrace proto.InternalMessageInfo

func (m *ActionTrace) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *ActionTrace) GetTid() string {
	if m != nil {
		return m.Tid
	}
	return ""
}

func (m *ActionTrace) GetRid() string {
	if m != nil {
		return m.Rid
	}
	return ""
}

func (m *ActionTrace) GetRefid() string {
	if m != nil {
		return m.Refid
	}
	return ""
}

func (m *ActionTrace) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *ActionTrace) GetTmd5() string {
	if m != nil {
		return m.Tmd5
	}
	return ""
}

func (m *ActionTrace) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ActionTrace) GetCross() string {
	if m != nil {
		return m.Cross
	}
	return ""
}

func (m *ActionTrace) GetUnableBack() bool {
	if m != nil {
		return m.UnableBack
	}
	return false
}

func (m *ActionTrace) GetUser() *UserInfo {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *ActionTrace) GetDetail() *TraceDetail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (m *ActionTrace) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *ActionTrace) GetMethod() HttpMethod {
	if m != nil {
		return m.Method
	}
	return HttpMethod_UNKNOWN
}

func (m *ActionTrace) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ActionTrace) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ActionTrace) GetNoSample() bool {
	if m != nil {
		return m.NoSample
	}
	return false
}

type UserInfo struct {
	Origin               UserInfoOriginType `protobuf:"varint,1,opt,name=origin,proto3,enum=protoc.UserInfoOriginType" json:"origin,omitempty"`
	Value                string             `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Error                string             `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{2}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetOrigin() UserInfoOriginType {
	if m != nil {
		return m.Origin
	}
	return UserInfoOriginType_SELF
}

func (m *UserInfo) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *UserInfo) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type TraceDetail struct {
	// query string
	QueryStringParameters string            `protobuf:"bytes,1,opt,name=queryStringParameters,proto3" json:"queryStringParameters,omitempty"`
	Custom                map[string]string `protobuf:"bytes,2,rep,name=custom,proto3" json:"custom,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tracers               []*TracerItem     `protobuf:"bytes,3,rep,name=tracers,proto3" json:"tracers,omitempty"`
	Health                map[string]string `protobuf:"bytes,4,rep,name=health,proto3" json:"health,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// For custom point cuts
	Posts                map[string]string `protobuf:"bytes,5,rep,name=posts,proto3" json:"posts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RequestHeader        map[string]string `protobuf:"bytes,6,rep,name=requestHeader,proto3" json:"requestHeader,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ResponseHeader       map[string]string `protobuf:"bytes,7,rep,name=responseHeader,proto3" json:"responseHeader,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Session              map[string]string `protobuf:"bytes,8,rep,name=session,proto3" json:"session,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TraceDetail) Reset()         { *m = TraceDetail{} }
func (m *TraceDetail) String() string { return proto.CompactTextString(m) }
func (*TraceDetail) ProtoMessage()    {}
func (*TraceDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{3}
}

func (m *TraceDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceDetail.Unmarshal(m, b)
}
func (m *TraceDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceDetail.Marshal(b, m, deterministic)
}
func (m *TraceDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceDetail.Merge(m, src)
}
func (m *TraceDetail) XXX_Size() int {
	return xxx_messageInfo_TraceDetail.Size(m)
}
func (m *TraceDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceDetail.DiscardUnknown(m)
}

var xxx_messageInfo_TraceDetail proto.InternalMessageInfo

func (m *TraceDetail) GetQueryStringParameters() string {
	if m != nil {
		return m.QueryStringParameters
	}
	return ""
}

func (m *TraceDetail) GetCustom() map[string]string {
	if m != nil {
		return m.Custom
	}
	return nil
}

func (m *TraceDetail) GetTracers() []*TracerItem {
	if m != nil {
		return m.Tracers
	}
	return nil
}

func (m *TraceDetail) GetHealth() map[string]string {
	if m != nil {
		return m.Health
	}
	return nil
}

func (m *TraceDetail) GetPosts() map[string]string {
	if m != nil {
		return m.Posts
	}
	return nil
}

func (m *TraceDetail) GetRequestHeader() map[string]string {
	if m != nil {
		return m.RequestHeader
	}
	return nil
}

func (m *TraceDetail) GetResponseHeader() map[string]string {
	if m != nil {
		return m.ResponseHeader
	}
	return nil
}

func (m *TraceDetail) GetSession() map[string]string {
	if m != nil {
		return m.Session
	}
	return nil
}

type TracerItem struct {
	TracerId             int32              `protobuf:"varint,1,opt,name=tracerId,proto3" json:"tracerId,omitempty"`
	ParentTracerId       int32              `protobuf:"varint,2,opt,name=parentTracerId,proto3" json:"parentTracerId,omitempty"`
	Start                int64              `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	End                  int64              `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	Metric               string             `protobuf:"bytes,5,opt,name=metric,proto3" json:"metric,omitempty"`
	Clazz                string             `protobuf:"bytes,6,opt,name=clazz,proto3" json:"clazz,omitempty"`
	Method               string             `protobuf:"bytes,7,opt,name=method,proto3" json:"method,omitempty"`
	Type                 TracerType         `protobuf:"varint,8,opt,name=type,proto3,enum=protoc.TracerType" json:"type,omitempty"`
	Params               *TracerParams      `protobuf:"bytes,9,opt,name=params,proto3" json:"params,omitempty"`
	Datas                map[string]string  `protobuf:"bytes,10,rep,name=datas,proto3" json:"datas,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Backtrace            []string           `protobuf:"bytes,11,rep,name=backtrace,proto3" json:"backtrace,omitempty"`
	Exception            []*TracerException `protobuf:"bytes,12,rep,name=exception,proto3" json:"exception,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TracerItem) Reset()         { *m = TracerItem{} }
func (m *TracerItem) String() string { return proto.CompactTextString(m) }
func (*TracerItem) ProtoMessage()    {}
func (*TracerItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{4}
}

func (m *TracerItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracerItem.Unmarshal(m, b)
}
func (m *TracerItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracerItem.Marshal(b, m, deterministic)
}
func (m *TracerItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracerItem.Merge(m, src)
}
func (m *TracerItem) XXX_Size() int {
	return xxx_messageInfo_TracerItem.Size(m)
}
func (m *TracerItem) XXX_DiscardUnknown() {
	xxx_messageInfo_TracerItem.DiscardUnknown(m)
}

var xxx_messageInfo_TracerItem proto.InternalMessageInfo

func (m *TracerItem) GetTracerId() int32 {
	if m != nil {
		return m.TracerId
	}
	return 0
}

func (m *TracerItem) GetParentTracerId() int32 {
	if m != nil {
		return m.ParentTracerId
	}
	return 0
}

func (m *TracerItem) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *TracerItem) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *TracerItem) GetMetric() string {
	if m != nil {
		return m.Metric
	}
	return ""
}

func (m *TracerItem) GetClazz() string {
	if m != nil {
		return m.Clazz
	}
	return ""
}

func (m *TracerItem) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *TracerItem) GetType() TracerType {
	if m != nil {
		return m.Type
	}
	return TracerType_Java
}

func (m *TracerItem) GetParams() *TracerParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *TracerItem) GetDatas() map[string]string {
	if m != nil {
		return m.Datas
	}
	return nil
}

func (m *TracerItem) GetBacktrace() []string {
	if m != nil {
		return m.Backtrace
	}
	return nil
}

func (m *TracerItem) GetException() []*TracerException {
	if m != nil {
		return m.Exception
	}
	return nil
}

type TracerParams struct {
	Vendor               string   `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Protocol             string   `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Instance             string   `protobuf:"bytes,3,opt,name=instance,proto3" json:"instance,omitempty"`
	Operation            string   `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation,omitempty"`
	Key                  string   `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`
	Bytes                int32    `protobuf:"varint,6,opt,name=bytes,proto3" json:"bytes,omitempty"`
	ExternalId           string   `protobuf:"bytes,7,opt,name=externalId,proto3" json:"externalId,omitempty"`
	TxData               string   `protobuf:"bytes,8,opt,name=txData,proto3" json:"txData,omitempty"`
	AsyncWait            bool     `protobuf:"varint,9,opt,name=asyncWait,proto3" json:"asyncWait,omitempty"`
	AsyncContext         string   `protobuf:"bytes,10,opt,name=asyncContext,proto3" json:"asyncContext,omitempty"`
	HandleRows           int32    `protobuf:"varint,11,opt,name=handleRows,proto3" json:"handleRows,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TracerParams) Reset()         { *m = TracerParams{} }
func (m *TracerParams) String() string { return proto.CompactTextString(m) }
func (*TracerParams) ProtoMessage()    {}
func (*TracerParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{5}
}

func (m *TracerParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracerParams.Unmarshal(m, b)
}
func (m *TracerParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracerParams.Marshal(b, m, deterministic)
}
func (m *TracerParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracerParams.Merge(m, src)
}
func (m *TracerParams) XXX_Size() int {
	return xxx_messageInfo_TracerParams.Size(m)
}
func (m *TracerParams) XXX_DiscardUnknown() {
	xxx_messageInfo_TracerParams.DiscardUnknown(m)
}

var xxx_messageInfo_TracerParams proto.InternalMessageInfo

func (m *TracerParams) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *TracerParams) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *TracerParams) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

func (m *TracerParams) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

func (m *TracerParams) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TracerParams) GetBytes() int32 {
	if m != nil {
		return m.Bytes
	}
	return 0
}

func (m *TracerParams) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *TracerParams) GetTxData() string {
	if m != nil {
		return m.TxData
	}
	return ""
}

func (m *TracerParams) GetAsyncWait() bool {
	if m != nil {
		return m.AsyncWait
	}
	return false
}

func (m *TracerParams) GetAsyncContext() string {
	if m != nil {
		return m.AsyncContext
	}
	return ""
}

func (m *TracerParams) GetHandleRows() int32 {
	if m != nil {
		return m.HandleRows
	}
	return 0
}

type TracerException struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Stack                []string `protobuf:"bytes,3,rep,name=stack,proto3" json:"stack,omitempty"`
	Error                bool     `protobuf:"varint,4,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TracerException) Reset()         { *m = TracerException{} }
func (m *TracerException) String() string { return proto.CompactTextString(m) }
func (*TracerException) ProtoMessage()    {}
func (*TracerException) Descriptor() ([]byte, []int) {
	return fileDescriptor_0571941a1d628a80, []int{6}
}

func (m *TracerException) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracerException.Unmarshal(m, b)
}
func (m *TracerException) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracerException.Marshal(b, m, deterministic)
}
func (m *TracerException) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracerException.Merge(m, src)
}
func (m *TracerException) XXX_Size() int {
	return xxx_messageInfo_TracerException.Size(m)
}
func (m *TracerException) XXX_DiscardUnknown() {
	xxx_messageInfo_TracerException.DiscardUnknown(m)
}

var xxx_messageInfo_TracerException proto.InternalMessageInfo

func (m *TracerException) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TracerException) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *TracerException) GetStack() []string {
	if m != nil {
		return m.Stack
	}
	return nil
}

func (m *TracerException) GetError() bool {
	if m != nil {
		return m.Error
	}
	return false
}

func init() {
	proto.RegisterEnum("protoc.TracerType", TracerType_name, TracerType_value)
	proto.RegisterEnum("protoc.HttpMethod", HttpMethod_name, HttpMethod_value)
	proto.RegisterEnum("protoc.UserInfoOriginType", UserInfoOriginType_name, UserInfoOriginType_value)
	proto.RegisterType((*ActionTraces)(nil), "protoc.ActionTraces")
	proto.RegisterType((*ActionTrace)(nil), "protoc.ActionTrace")
	proto.RegisterType((*UserInfo)(nil), "protoc.UserInfo")
	proto.RegisterType((*TraceDetail)(nil), "protoc.TraceDetail")
	proto.RegisterMapType((map[string]string)(nil), "protoc.TraceDetail.CustomEntry")
	proto.RegisterMapType((map[string]string)(nil), "protoc.TraceDetail.HealthEntry")
	proto.RegisterMapType((map[string]string)(nil), "protoc.TraceDetail.PostsEntry")
	proto.RegisterMapType((map[string]string)(nil), "protoc.TraceDetail.RequestHeaderEntry")
	proto.RegisterMapType((map[string]string)(nil), "protoc.TraceDetail.ResponseHeaderEntry")
	proto.RegisterMapType((map[string]string)(nil), "protoc.TraceDetail.SessionEntry")
	proto.RegisterType((*TracerItem)(nil), "protoc.TracerItem")
	proto.RegisterMapType((map[string]string)(nil), "protoc.TracerItem.DatasEntry")
	proto.RegisterType((*TracerParams)(nil), "protoc.TracerParams")
	proto.RegisterType((*TracerException)(nil), "protoc.TracerException")
}

func init() { proto.RegisterFile("trace.proto", fileDescriptor_0571941a1d628a80) }

var fileDescriptor_0571941a1d628a80 = []byte{
	// 1182 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xdd, 0x76, 0x1b, 0x35,
	0x10, 0xae, 0xbd, 0xfe, 0xdb, 0xb1, 0x9b, 0x2e, 0x6a, 0x81, 0x3d, 0x3d, 0x50, 0x7c, 0x7c, 0x38,
	0xc5, 0x27, 0xf4, 0xe4, 0x22, 0x6d, 0x0f, 0xa5, 0xdc, 0x90, 0x3a, 0x0b, 0x09, 0x6d, 0x6c, 0x23,
	0xbb, 0xe4, 0x5a, 0xd9, 0x55, 0x93, 0x25, 0xf6, 0xee, 0x56, 0x92, 0x4b, 0x5c, 0xde, 0x89, 0x47,
	0xe0, 0x39, 0x78, 0x01, 0xde, 0x83, 0x33, 0x23, 0xf9, 0x2f, 0x31, 0x17, 0xb9, 0x5a, 0x7d, 0x33,
	0xdf, 0xfc, 0x68, 0x46, 0x1a, 0x2d, 0x34, 0x8d, 0x12, 0xb1, 0xdc, 0x2b, 0x54, 0x6e, 0x72, 0x56,
	0xa3, 0x4f, 0xdc, 0xf9, 0x01, 0x5a, 0x07, 0xb1, 0x49, 0xf3, 0x6c, 0x8c, 0x4a, 0xcd, 0xbe, 0x85,
	0x1a, 0xd1, 0x74, 0x58, 0x6a, 0x7b, 0xdd, 0xe6, 0xfe, 0x7d, 0xcb, 0x8f, 0xf7, 0xd6, 0x58, 0xdc,
	0x51, 0x3a, 0x7f, 0x79, 0xd0, 0x5c, 0x93, 0x33, 0x06, 0x15, 0x93, 0x4e, 0x65, 0x58, 0x6a, 0x97,
	0xba, 0x1e, 0xa7, 0x35, 0x0b, 0xc0, 0x33, 0x69, 0x12, 0x96, 0xdb, 0xa5, 0xae, 0xcf, 0x71, 0x89,
	0x12, 0x95, 0x26, 0xa1, 0x67, 0x25, 0x2a, 0x4d, 0xd8, 0x03, 0xa8, 0x2a, 0xf9, 0x2e, 0x4d, 0xc2,
	0x0a, 0xc9, 0x2c, 0x60, 0x0f, 0xa1, 0x91, 0xcc, 0x94, 0x40, 0xf7, 0x61, 0x95, 0x3c, 0x2e, 0x31,
	0x45, 0x9a, 0x26, 0xcf, 0xc3, 0x1a, 0x19, 0xd0, 0x9a, 0x7d, 0x06, 0x35, 0x41, 0xc9, 0x84, 0x75,
	0x92, 0x3a, 0x84, 0xde, 0x63, 0x95, 0x6b, 0x1d, 0xfa, 0xd6, 0x3b, 0x01, 0xf6, 0x08, 0x60, 0x96,
	0x89, 0xb3, 0x89, 0x7c, 0x25, 0xe2, 0xcb, 0x10, 0xda, 0xa5, 0x6e, 0x83, 0xaf, 0x49, 0xd8, 0xd7,
	0x50, 0x99, 0x69, 0xa9, 0xc2, 0x56, 0xbb, 0xd4, 0x6d, 0xee, 0x07, 0x8b, 0x32, 0xbc, 0xd5, 0x52,
	0x1d, 0x67, 0xef, 0x72, 0x4e, 0x5a, 0x2c, 0x57, 0x22, 0x8d, 0x48, 0x27, 0xe1, 0x5d, 0xe2, 0x2d,
	0xcb, 0x45, 0x05, 0x39, 0x24, 0x15, 0x77, 0x14, 0xb6, 0x03, 0xe5, 0xb4, 0x08, 0x77, 0x28, 0x8b,
	0x72, 0x5a, 0xb0, 0x5d, 0xa8, 0x4d, 0xa5, 0xb9, 0xc8, 0x93, 0xf0, 0x5e, 0xbb, 0xd4, 0xdd, 0xd9,
	0x67, 0x0b, 0xe3, 0x23, 0x63, 0x8a, 0x13, 0xd2, 0x70, 0xc7, 0xc0, 0xcd, 0x69, 0x23, 0xcc, 0x4c,
	0x87, 0x41, 0xbb, 0xd4, 0xad, 0x72, 0x87, 0xb0, 0x98, 0x33, 0x35, 0x09, 0x3f, 0xb1, 0xc5, 0x9c,
	0xa9, 0x09, 0x96, 0x2d, 0xcb, 0x47, 0x62, 0x5a, 0x4c, 0x64, 0xc8, 0x68, 0x5b, 0x4b, 0xdc, 0xf9,
	0x1d, 0x1a, 0x8b, 0x0d, 0xb0, 0x7d, 0xa8, 0xe5, 0x2a, 0x3d, 0x4f, 0x33, 0x6a, 0xd7, 0xce, 0xfe,
	0xc3, 0xeb, 0x5b, 0x1c, 0x90, 0x76, 0x3c, 0x2f, 0x24, 0x77, 0x4c, 0x2c, 0xe5, 0x07, 0x31, 0x99,
	0x49, 0xd7, 0x4e, 0x0b, 0x50, 0x2a, 0x95, 0xca, 0x95, 0x6b, 0xa9, 0x05, 0x9d, 0x7f, 0x6b, 0xd0,
	0x5c, 0xab, 0x02, 0x7b, 0x06, 0x9f, 0xbe, 0x9f, 0x49, 0x35, 0x1f, 0x19, 0x95, 0x66, 0xe7, 0x43,
	0xa1, 0xc4, 0x54, 0x1a, 0xa9, 0x34, 0x85, 0xf7, 0xf9, 0x76, 0x25, 0xfb, 0x0e, 0x6a, 0xf1, 0x4c,
	0x9b, 0x7c, 0x1a, 0x96, 0xe9, 0x3c, 0x7e, 0xb5, 0xa5, 0xc0, 0x7b, 0x3d, 0x62, 0x44, 0x99, 0x51,
	0x73, 0xee, 0xe8, 0xec, 0x09, 0xd4, 0xe9, 0x94, 0x2a, 0x1d, 0x7a, 0x64, 0xc9, 0x36, 0x2c, 0xd5,
	0xb1, 0x91, 0x53, 0xbe, 0xa0, 0x60, 0x98, 0x0b, 0x29, 0x26, 0xe6, 0x22, 0xac, 0xfc, 0x7f, 0x98,
	0x23, 0x62, 0xb8, 0x30, 0x96, 0xce, 0x9e, 0x41, 0xb5, 0xc8, 0xb5, 0xd1, 0x61, 0x95, 0xec, 0x1e,
	0x6d, 0xb3, 0x1b, 0x22, 0xc1, 0x9a, 0x59, 0x32, 0x7b, 0x03, 0x77, 0x95, 0x7c, 0x3f, 0x93, 0xda,
	0x1c, 0x49, 0x91, 0x48, 0x15, 0xd6, 0xc8, 0xfa, 0xf1, 0x36, 0x6b, 0xbe, 0x4e, 0xb4, 0x5e, 0x36,
	0x8d, 0xd9, 0x00, 0x76, 0x94, 0xd4, 0x45, 0x9e, 0x69, 0xe9, 0xdc, 0xd5, 0xc9, 0xdd, 0x37, 0xdb,
	0xdd, 0xad, 0x33, 0xad, 0xbf, 0x6b, 0xe6, 0xec, 0x25, 0xd4, 0xb5, 0xd4, 0x1a, 0xaf, 0x52, 0x83,
	0x3c, 0xb5, 0xb7, 0x79, 0x1a, 0x59, 0x8a, 0x75, 0xb1, 0x30, 0x78, 0xf8, 0x3d, 0x34, 0xd7, 0xda,
	0x81, 0xe7, 0xf3, 0x52, 0xce, 0x5d, 0x8f, 0x71, 0xb9, 0xfd, 0x0c, 0xbd, 0x2c, 0xbf, 0x28, 0xa1,
	0xe9, 0x5a, 0x89, 0x6f, 0x65, 0xfa, 0x02, 0x60, 0x55, 0xe5, 0x5b, 0x59, 0xfe, 0x08, 0xec, 0x66,
	0x85, 0x6f, 0xe5, 0xe1, 0x00, 0xee, 0x6f, 0x29, 0xea, 0xad, 0x5c, 0xbc, 0x84, 0xd6, 0x7a, 0x35,
	0x6f, 0x63, 0xdb, 0xf9, 0xc7, 0x03, 0x58, 0x1d, 0x69, 0xbc, 0xfe, 0xf6, 0x50, 0x1f, 0x27, 0x64,
	0x5f, 0xe5, 0x4b, 0xcc, 0x1e, 0xc3, 0x4e, 0x21, 0x94, 0xcc, 0xcc, 0x78, 0xc1, 0x28, 0x13, 0xe3,
	0x9a, 0x14, 0x83, 0x69, 0x23, 0x94, 0xa1, 0x0b, 0xed, 0x71, 0x0b, 0x30, 0x29, 0x99, 0xd9, 0x19,
	0xed, 0x71, 0x5c, 0xe2, 0x50, 0x9a, 0x4a, 0xa3, 0xd2, 0x98, 0xe6, 0xb3, 0xcf, 0x1d, 0xa2, 0x89,
	0x3b, 0x11, 0x1f, 0x3f, 0xba, 0xf1, 0x6c, 0x81, 0x63, 0xe3, 0xb8, 0xab, 0x2f, 0xd9, 0x38, 0xda,
	0x1e, 0x43, 0xc5, 0xcc, 0x0b, 0x19, 0x36, 0x36, 0x87, 0xa0, 0xcd, 0x86, 0xc6, 0x0f, 0xe9, 0xd9,
	0x13, 0xa8, 0x15, 0x38, 0x18, 0xec, 0x20, 0x6f, 0xee, 0x3f, 0xd8, 0x64, 0xd2, 0xd0, 0xd0, 0xdc,
	0x71, 0xd8, 0x53, 0xa8, 0x26, 0xc2, 0x08, 0x1d, 0x02, 0x9d, 0xe0, 0x2f, 0x6f, 0xde, 0xfe, 0xbd,
	0x43, 0xd4, 0xbb, 0x7b, 0x49, 0x5c, 0xf6, 0x05, 0xf8, 0x67, 0x22, 0xbe, 0xa4, 0x82, 0x85, 0xcd,
	0xb6, 0xd7, 0xf5, 0xf9, 0x4a, 0xc0, 0x9e, 0x83, 0x2f, 0xaf, 0x62, 0x59, 0xd0, 0x1b, 0xd3, 0x22,
	0xb7, 0x9f, 0x6f, 0xba, 0x8d, 0x16, 0x6a, 0xbe, 0x62, 0xe2, 0xd9, 0x5c, 0x45, 0xba, 0x55, 0x6b,
	0xff, 0x2e, 0x43, 0x6b, 0x7d, 0x73, 0x58, 0xc2, 0x0f, 0x32, 0x4b, 0x72, 0xe5, 0xec, 0x1d, 0xc2,
	0xa6, 0xdb, 0x3c, 0xf2, 0x89, 0xf3, 0xb2, 0xc4, 0xa8, 0x4b, 0x33, 0x6d, 0x44, 0x16, 0x4b, 0x37,
	0xa0, 0x97, 0x18, 0xf7, 0x9b, 0x17, 0xd2, 0xbd, 0xb1, 0xf6, 0xf1, 0x5d, 0x09, 0x16, 0xa9, 0x56,
	0x37, 0x52, 0x3d, 0x9b, 0x1b, 0xa9, 0xa9, 0xb1, 0x55, 0x6e, 0x01, 0x3e, 0xa5, 0xf2, 0xca, 0x48,
	0x95, 0x89, 0xc9, 0xf1, 0xa2, 0xb9, 0x6b, 0x12, 0xcc, 0xda, 0x5c, 0x61, 0x09, 0xa8, 0xc5, 0x3e,
	0x77, 0x08, 0xa3, 0x0b, 0x3d, 0xcf, 0xe2, 0x53, 0x91, 0x1a, 0xea, 0x69, 0x83, 0xaf, 0x04, 0xac,
	0x03, 0x2d, 0x02, 0xbd, 0x3c, 0x33, 0xf2, 0xca, 0xd0, 0x13, 0xed, 0xf3, 0x0d, 0x19, 0x46, 0xbe,
	0x10, 0x59, 0x32, 0x91, 0x3c, 0xff, 0x43, 0x87, 0x4d, 0x4a, 0x6a, 0x4d, 0xd2, 0x89, 0xe1, 0xde,
	0xb5, 0xc6, 0xe0, 0x9f, 0x43, 0x26, 0xdc, 0x3f, 0x8a, 0xcf, 0x69, 0x8d, 0x1b, 0x9d, 0xea, 0xf3,
	0xc5, 0x3f, 0xca, 0x54, 0x9f, 0xbb, 0x1b, 0x10, 0x5f, 0xd2, 0xdb, 0xe1, 0x73, 0x0b, 0x56, 0x0f,
	0x5d, 0x85, 0x92, 0xb5, 0x60, 0x37, 0x5d, 0xdc, 0x3f, 0x3c, 0xab, 0xac, 0x01, 0x95, 0x5f, 0xc4,
	0x07, 0x11, 0xdc, 0x61, 0x2d, 0x68, 0xe0, 0x36, 0xcf, 0x84, 0x96, 0x41, 0x89, 0xf9, 0x50, 0xe5,
	0x32, 0x49, 0x75, 0x50, 0x66, 0x77, 0xc1, 0x3f, 0x91, 0xd3, 0x58, 0xc4, 0x17, 0x32, 0x09, 0x3c,
	0xd4, 0x9c, 0xe4, 0xd9, 0x79, 0x1e, 0x54, 0xd0, 0x24, 0x72, 0x75, 0x0b, 0xaa, 0xac, 0x0e, 0xde,
	0xc9, 0xaf, 0xc3, 0xa0, 0x66, 0x17, 0xbd, 0xa0, 0xbe, 0xfb, 0x27, 0xc0, 0xea, 0xdf, 0x80, 0x35,
	0xa1, 0xfe, 0xb6, 0xff, 0xba, 0x3f, 0x38, 0xed, 0x07, 0x77, 0x90, 0xf3, 0x73, 0x34, 0x0e, 0x4a,
	0x98, 0xc0, 0x70, 0x30, 0x1a, 0x07, 0x65, 0x14, 0x0d, 0xdf, 0x8e, 0x03, 0x8f, 0x01, 0xd4, 0x0e,
	0xa3, 0x37, 0xd1, 0x38, 0x0a, 0x2a, 0xa8, 0x3e, 0x8a, 0x0e, 0x0e, 0x83, 0x2a, 0x9a, 0xf7, 0x06,
	0xfd, 0x7e, 0xd4, 0x1b, 0x07, 0x35, 0x04, 0x83, 0xe1, 0xf8, 0x78, 0xd0, 0x1f, 0x05, 0x75, 0xcc,
	0x68, 0xcc, 0x0f, 0x7a, 0x51, 0xd0, 0xc0, 0xe5, 0xf0, 0x60, 0xdc, 0x3b, 0x0a, 0xfc, 0xdd, 0x13,
	0x60, 0x37, 0x7f, 0x0d, 0xd0, 0xdf, 0x28, 0x7a, 0xf3, 0x53, 0x70, 0x07, 0xa3, 0x8c, 0x22, 0xfe,
	0x5b, 0xc4, 0x83, 0x12, 0x86, 0x3e, 0x18, 0x0e, 0x83, 0x32, 0xfa, 0x7d, 0xc5, 0x07, 0xa7, 0xa3,
	0x88, 0x07, 0x1e, 0x82, 0x7e, 0x34, 0x3e, 0x1d, 0xf0, 0xd7, 0x41, 0xe5, 0xcc, 0xfe, 0x81, 0x3e,
	0xfd, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x9d, 0xf6, 0xda, 0x97, 0x0a, 0x00, 0x00,
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: protoc/trace.proto

package protoc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TracerType int32

const (
	TracerType_Java      TracerType = 0
	TracerType_Database  TracerType = 1
	TracerType_Redis     TracerType = 2
	TracerType_Memcached TracerType = 3
	TracerType_Mongo     TracerType = 4
	TracerType_External  TracerType = 5
	TracerType_MQP       TracerType = 6
	TracerType_MQC       TracerType = 7
)

// Enum value maps for TracerType.
var (
	TracerType_name = map[int32]string{
		0: "Java",
		1: "Database",
		2: "Redis",
		3: "Memcached",
		4: "Mongo",
		5: "External",
		6: "MQP",
		7: "MQC",
	}
	TracerType_value = map[string]int32{
		"Java":      0,
		"Database":  1,
		"Redis":     2,
		"Memcached": 3,
		"Mongo":     4,
		"External":  5,
		"MQP":       6,
		"MQC":       7,
	}
)

func (x TracerType) Enum() *TracerType {
	p := new(TracerType)
	*p = x
	return p
}

func (x TracerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TracerType) Descriptor() protoreflect.EnumDescriptor {
	return file_protoc_trace_proto_enumTypes[0].Descriptor()
}

func (TracerType) Type() protoreflect.EnumType {
	return &file_protoc_trace_proto_enumTypes[0]
}

func (x TracerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TracerType.Descriptor instead.
func (TracerType) EnumDescriptor() ([]byte, []int) {
	return file_protoc_trace_proto_rawDescGZIP(), []int{0}
}

type HttpMethod int32

const (
	HttpMethod_UNKNOWN HttpMethod = 0
	HttpMethod_GET     HttpMethod = 1
	HttpMethod_POST    HttpMethod = 2
	HttpMethod_PUT     HttpMethod = 3
	HttpMethod_DELETE  HttpMethod = 4
	HttpMethod_HEAD    HttpMethod = 5
	HttpMethod_CONNECT HttpMethod = 6
	HttpMethod_OPTIONS HttpMethod = 7
	HttpMethod_TRACE   HttpMethod = 8
	HttpMethod_PATCH   HttpMethod = 9
)

// Enum value maps for HttpMethod.
var (
	HttpMethod_name = map[int32]string{
		0: "UNKNOWN",
		1: "GET",
		2: "POST",
		3: "PUT",
		4: "DELETE",
		5: "HEAD",
		6: "CONNECT",
		7: "OPTIONS",
		8: "TRACE",
		9: "PATCH",
	}
	HttpMethod_value = map[string]int32{
		"UNKNOWN": 0,
		"GET":     1,
		"POST":    2,
		"PUT":     3,
		"DELETE":  4,
		"HEAD":    5,
		"CONNECT": 6,
		"OPTIONS": 7,
		"TRACE":   8,
		"PATCH":   9,
	}
)

func (x HttpMethod) Enum() *HttpMethod {
	p := new(HttpMethod)
	*p = x
	return p
}

func (x HttpMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HttpMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_protoc_trace_proto_enumTypes[1].Descriptor()
}

func (HttpMethod) Type() protoreflect.EnumType {
	return &file_protoc_trace_proto_enumTypes[1]
}

func (x HttpMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HttpMethod.Descriptor instead.
func (HttpMethod) EnumDescriptor() ([]byte, []int) {
	return file_protoc_trace_proto_rawDescGZIP(), []int{1}
}

type UserInfoOriginType int32

const (
	UserInfoOriginType_SELF    UserInfoOriginType = 0
	UserInfoOriginType_SERVER  UserInfoOriginType = 1
	UserInfoOriginType_APP     UserInfoOriginType = 2
	UserInfoOriginType_BROWSER UserInfoOriginType = 3
	UserInfoOriginType_NETWORK UserInfoOriginType = 4
)

// Enum value maps for UserInfoOriginType.
var (
	UserInfoOriginType_name = map[int32]string{
		0: "SELF",
		1: "SERVER",
		2: "APP",
		3: "BROWSER",
		4: "NETWORK",
	}
	UserInfoOriginType_value = map[string]int32{
		"SELF":    0,
		"SERVER":  1,
		"APP":     2,
		"BROWSER": 3,
		"NETWORK": 4,
	}
)

func (x UserInfoOriginType) Enum() *UserInfoOriginType {
	p := new(UserInfoOriginType)
	*p = x
	return p
}

func (x UserInfoOriginType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserInfoOriginType) Descriptor() protoreflect.EnumDescriptor {
	return file_protoc_trace_proto_enumTypes[2].Descriptor()
}

func (UserInfoOriginType) Type() protoreflect.EnumType {
	return &file_protoc_trace_proto_enumTypes[2]
}

func (x UserInfoOriginType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserInfoOriginType.Descriptor instead.
func (UserInfoOriginType) EnumDescriptor() ([]byte, []int) {
	return file_protoc_trace_proto_rawDescGZIP(), []int{2}
}

type ActionTraces struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Traces []*ActionTrace `protobuf:"bytes,1,rep,name=traces,proto3" json:"traces,omitempty"`
}

func (x *ActionTraces) Reset() {
	*x = ActionTraces{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_trace_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionTraces) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionTraces) ProtoMessage() {}

func (x *ActionTraces) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_trace_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionTraces.ProtoReflect.Descriptor instead.
func (*ActionTraces) Descriptor() ([]byte, []int) {
	return file_protoc_trace_proto_rawDescGZIP(), []int{0}
}

func (x *ActionTraces) GetTraces() []*ActionTrace {
	if x != nil {
		return x.Traces
	}
	return nil
}

type ActionTrace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time       int64        `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Tid        string       `protobuf:"bytes,2,opt,name=tid,proto3" json:"tid,omitempty"`
	Rid        string       `protobuf:"bytes,3,opt,name=rid,proto3" json:"rid,omitempty"`
	Refid      string       `protobuf:"bytes,4,opt,name=refid,proto3" json:"refid,omitempty"`
	Duration   int64        `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Tmd5       string       `protobuf:"bytes,6,opt,name=tmd5,proto3" json:"tmd5,omitempty"`
	Action     string       `protobuf:"bytes,7,opt,name=action,proto3" json:"action,omitempty"`
	Cross      string       `protobuf:"bytes,9,opt,name=cross,proto3" json:"cross,omitempty"`
	UnableBack bool         `protobuf:"varint,10,opt,name=unableBack,proto3" json:"unableBack,omitempty"`
	User       *UserInfo    `protobuf:"bytes,12,opt,name=user,proto3" json:"user,omitempty"`
	Detail     *TraceDetail `protobuf:"bytes,13,opt,name=detail,proto3" json:"detail,omitempty"`
	Ip         string       `protobuf:"bytes,14,opt,name=ip,proto3" json:"ip,omitempty"`
	Method     HttpMethod   `protobuf:"varint,15,opt,name=method,proto3,enum=protoc.HttpMethod" json:"method,omitempty"`
	Status     int32        `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`
	Url        string       `protobuf:"bytes,17,opt,name=url,proto3" json:"url,omitempty"`
	NoSample   bool         `protobuf:"varint,18,opt,name=noSample,proto3" json:"noSample,omitempty"` // false 采样 true 非采样
}

func (x *ActionTrace) Reset() {
	*x = ActionTrace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_trace_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionTrace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionTrace) ProtoMessage() {}

func (x *ActionTrace) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_trace_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionTrace.ProtoReflect.Descriptor instead.
func (*ActionTrace) Descriptor() ([]byte, []int) {
	return file_protoc_trace_proto_rawDescGZIP(), []int{1}
}

func (x *ActionTrace) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ActionTrace) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *ActionTrace) GetRid() string {
	if x != nil {
		return x.Rid
	}
	return ""
}

func (x *ActionTrace) GetRefid() string {
	if x != nil {
		return x.Refid
	}
	return ""
}

func (x *ActionTrace) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ActionTrace) GetTmd5() string {
	if x != nil {
		return x.Tmd5
	}
	return ""
}

func (x *ActionTrace) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ActionTrace) GetCross() string {
	if x != nil {
		return x.Cross
	}
	return ""
}

func (x *ActionTrace) GetUnableBack() bool {
	if x != nil {
		return x.UnableBack
	}
	return false
}

func (x *ActionTrace) GetUser() *UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ActionTrace) GetDetail() *TraceDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *ActionTrace) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ActionTrace) GetMethod() HttpMethod {
	if x != nil {
		return x.Method
	}
	return HttpMethod_UNKNOWN
}

func (x *ActionTrace) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ActionTrace) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ActionTrace) GetNoSample() bool {
	if x != nil {
		return x.NoSample
	}
	return false
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin UserInfoOriginType `protobuf:"varint,1,opt,name=origin,proto3,enum=protoc.UserInfoOriginType" json:"origin,omitempty"`
	Value  string             `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Error  string             `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_trace_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_trace_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_protoc_trace_proto_rawDescGZIP(), []int{2}
}

func (x *UserInfo) GetOrigin() UserInfoOriginType {
	if x != nil {
		return x.Origin
	}
	return UserInfoOriginType_SELF
}

func (x *UserInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *UserInfo) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type TraceDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// query string
	QueryStringParameters string            `protobuf:"bytes,1,opt,name=queryStringParameters,proto3" json:"queryStringParameters,omitempty"`
	Custom                map[string]string `protobuf:"bytes,2,rep,name=custom,proto3" json:"custom,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tracers               []*TracerItem     `protobuf:"bytes,3,rep,name=tracers,proto3" json:"tracers,omitempty"`
	Health                map[string]string `protobuf:"bytes,4,rep,name=health,proto3" json:"health,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// For custom point cuts
	Posts          map[string]string `protobuf:"bytes,5,rep,name=posts,proto3" json:"posts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RequestHeader  map[string]string `protobuf:"bytes,6,rep,name=requestHeader,proto3" json:"requestHeader,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ResponseHeader map[string]string `protobuf:"bytes,7,rep,name=responseHeader,proto3" json:"responseHeader,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Session        map[string]string `protobuf:"bytes,8,rep,name=session,proto3" json:"session,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TraceDetail) Reset() {
	*x = TraceDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_trace_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraceDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceDetail) ProtoMessage() {}

func (x *TraceDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_trace_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceDetail.ProtoReflect.Descriptor instead.
func (*TraceDetail) Descriptor() ([]byte, []int) {
	return file_protoc_trace_proto_rawDescGZIP(), []int{3}
}

func (x *TraceDetail) GetQueryStringParameters() string {
	if x != nil {
		return x.QueryStringParameters
	}
	return ""
}

func (x *TraceDetail) GetCustom() map[string]string {
	if x != nil {
		return x.Custom
	}
	return nil
}

func (x *TraceDetail) GetTracers() []*TracerItem {
	if x != nil {
		return x.Tracers
	}
	return nil
}

func (x *TraceDetail) GetHealth() map[string]string {
	if x != nil {
		return x.Health
	}
	return nil
}

func (x *TraceDetail) GetPosts() map[string]string {
	if x != nil {
		return x.Posts
	}
	return nil
}

func (x *TraceDetail) GetRequestHeader() map[string]string {
	if x != nil {
		return x.RequestHeader
	}
	return nil
}

func (x *TraceDetail) GetResponseHeader() map[string]string {
	if x != nil {
		return x.ResponseHeader
	}
	return nil
}

func (x *TraceDetail) GetSession() map[string]string {
	if x != nil {
		return x.Session
	}
	return nil
}

type TracerItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TracerId       int32              `protobuf:"varint,1,opt,name=tracerId,proto3" json:"tracerId,omitempty"`
	ParentTracerId int32              `protobuf:"varint,2,opt,name=parentTracerId,proto3" json:"parentTracerId,omitempty"`
	Start          int64              `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	End            int64              `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	Metric         string             `protobuf:"bytes,5,opt,name=metric,proto3" json:"metric,omitempty"`
	Clazz          string             `protobuf:"bytes,6,opt,name=clazz,proto3" json:"clazz,omitempty"`
	Method         string             `protobuf:"bytes,7,opt,name=method,proto3" json:"method,omitempty"`
	Type           TracerType         `protobuf:"varint,8,opt,name=type,proto3,enum=protoc.TracerType" json:"type,omitempty"`
	Params         *TracerParams      `protobuf:"bytes,9,opt,name=params,proto3" json:"params,omitempty"`
	Datas          map[string]string  `protobuf:"bytes,10,rep,name=datas,proto3" json:"datas,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Backtrace      []string           `protobuf:"bytes,11,rep,name=backtrace,proto3" json:"backtrace,omitempty"`
	Exception      []*TracerException `protobuf:"bytes,12,rep,name=exception,proto3" json:"exception,omitempty"`
}

func (x *TracerItem) Reset() {
	*x = TracerItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_trace_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TracerItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracerItem) ProtoMessage() {}

func (x *TracerItem) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_trace_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracerItem.ProtoReflect.Descriptor instead.
func (*TracerItem) Descriptor() ([]byte, []int) {
	return file_protoc_trace_proto_rawDescGZIP(), []int{4}
}

func (x *TracerItem) GetTracerId() int32 {
	if x != nil {
		return x.TracerId
	}
	return 0
}

func (x *TracerItem) GetParentTracerId() int32 {
	if x != nil {
		return x.ParentTracerId
	}
	return 0
}

func (x *TracerItem) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *TracerItem) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *TracerItem) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *TracerItem) GetClazz() string {
	if x != nil {
		return x.Clazz
	}
	return ""
}

func (x *TracerItem) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *TracerItem) GetType() TracerType {
	if x != nil {
		return x.Type
	}
	return TracerType_Java
}

func (x *TracerItem) GetParams() *TracerParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *TracerItem) GetDatas() map[string]string {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *TracerItem) GetBacktrace() []string {
	if x != nil {
		return x.Backtrace
	}
	return nil
}

func (x *TracerItem) GetException() []*TracerException {
	if x != nil {
		return x.Exception
	}
	return nil
}

type TracerParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendor       string `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Protocol     string `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Instance     string `protobuf:"bytes,3,opt,name=instance,proto3" json:"instance,omitempty"`
	Operation    string `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation,omitempty"`
	Key          string `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`
	Bytes        int32  `protobuf:"varint,6,opt,name=bytes,proto3" json:"bytes,omitempty"`
	ExternalId   string `protobuf:"bytes,7,opt,name=externalId,proto3" json:"externalId,omitempty"`
	TxData       string `protobuf:"bytes,8,opt,name=txData,proto3" json:"txData,omitempty"`
	AsyncWait    bool   `protobuf:"varint,9,opt,name=asyncWait,proto3" json:"asyncWait,omitempty"`
	AsyncContext string `protobuf:"bytes,10,opt,name=asyncContext,proto3" json:"asyncContext,omitempty"`
	HandleRows   int32  `protobuf:"varint,11,opt,name=handleRows,proto3" json:"handleRows,omitempty"`
	StatusCode   int32  `protobuf:"varint,15,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
}

func (x *TracerParams) Reset() {
	*x = TracerParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_trace_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TracerParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracerParams) ProtoMessage() {}

func (x *TracerParams) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_trace_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracerParams.ProtoReflect.Descriptor instead.
func (*TracerParams) Descriptor() ([]byte, []int) {
	return file_protoc_trace_proto_rawDescGZIP(), []int{5}
}

func (x *TracerParams) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *TracerParams) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *TracerParams) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *TracerParams) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *TracerParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TracerParams) GetBytes() int32 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *TracerParams) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *TracerParams) GetTxData() string {
	if x != nil {
		return x.TxData
	}
	return ""
}

func (x *TracerParams) GetAsyncWait() bool {
	if x != nil {
		return x.AsyncWait
	}
	return false
}

func (x *TracerParams) GetAsyncContext() string {
	if x != nil {
		return x.AsyncContext
	}
	return ""
}

func (x *TracerParams) GetHandleRows() int32 {
	if x != nil {
		return x.HandleRows
	}
	return 0
}

func (x *TracerParams) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

type TracerException struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Msg   string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Stack []string `protobuf:"bytes,3,rep,name=stack,proto3" json:"stack,omitempty"`
	Error bool     `protobuf:"varint,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *TracerException) Reset() {
	*x = TracerException{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_trace_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TracerException) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracerException) ProtoMessage() {}

func (x *TracerException) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_trace_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracerException.ProtoReflect.Descriptor instead.
func (*TracerException) Descriptor() ([]byte, []int) {
	return file_protoc_trace_proto_rawDescGZIP(), []int{6}
}

func (x *TracerException) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TracerException) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TracerException) GetStack() []string {
	if x != nil {
		return x.Stack
	}
	return nil
}

func (x *TracerException) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

var File_protoc_trace_proto protoreflect.FileDescriptor

var file_protoc_trace_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x22, 0x3b, 0x0a, 0x0c,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x06,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x52, 0x06, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x22, 0xae, 0x03, 0x0a, 0x0b, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x66, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x65, 0x66, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6d, 0x64, 0x35, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x6d, 0x64, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x72, 0x6f, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x42,
	0x61, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x75, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x24, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x06, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x6f, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x6e, 0x6f, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x22, 0x6a, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xe5, 0x06, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x34, 0x0a, 0x15, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x37, 0x0a, 0x06,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x2c, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x72, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x34, 0x0a, 0x05,
	0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x70, 0x6f, 0x73,
	0x74, 0x73, 0x12, 0x4c, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x4f, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x39, 0x0a,
	0x0b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x38, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x40, 0x0a,
	0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x41, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd8,
	0x03, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x7a, 0x7a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6c, 0x61, 0x7a, 0x7a, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x33, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61,
	0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x61, 0x63, 0x6b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72, 0x45, 0x78, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x38, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xde, 0x02, 0x0a, 0x0c, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x78, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x79, 0x6e,
	0x63, 0x57, 0x61, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x73, 0x79,
	0x6e, 0x63, 0x57, 0x61, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73,
	0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x63, 0x0a, 0x0f, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x72, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2a,
	0x69, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4a, 0x61, 0x76, 0x61, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x65, 0x64, 0x69, 0x73, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x65, 0x6d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x10, 0x03, 0x12,
	0x09, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x51, 0x50, 0x10,
	0x06, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x51, 0x43, 0x10, 0x07, 0x2a, 0x7b, 0x0a, 0x0a, 0x48, 0x74,
	0x74, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x50, 0x4f, 0x53, 0x54, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x55, 0x54, 0x10,
	0x03, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x04, 0x12, 0x08, 0x0a,
	0x04, 0x48, 0x45, 0x41, 0x44, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4e, 0x4e, 0x45,
	0x43, 0x54, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10,
	0x07, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x52, 0x41, 0x43, 0x45, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05,
	0x50, 0x41, 0x54, 0x43, 0x48, 0x10, 0x09, 0x2a, 0x4d, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x53, 0x45, 0x4c, 0x46, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x52, 0x56, 0x45,
	0x52, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x50, 0x50, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x42, 0x52, 0x4f, 0x57, 0x53, 0x45, 0x52, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x45, 0x54,
	0x57, 0x4f, 0x52, 0x4b, 0x10, 0x04, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protoc_trace_proto_rawDescOnce sync.Once
	file_protoc_trace_proto_rawDescData = file_protoc_trace_proto_rawDesc
)

func file_protoc_trace_proto_rawDescGZIP() []byte {
	file_protoc_trace_proto_rawDescOnce.Do(func() {
		file_protoc_trace_proto_rawDescData = protoimpl.X.CompressGZIP(file_protoc_trace_proto_rawDescData)
	})
	return file_protoc_trace_proto_rawDescData
}

var file_protoc_trace_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_protoc_trace_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_protoc_trace_proto_goTypes = []interface{}{
	(TracerType)(0),         // 0: protoc.TracerType
	(HttpMethod)(0),         // 1: protoc.HttpMethod
	(UserInfoOriginType)(0), // 2: protoc.UserInfoOriginType
	(*ActionTraces)(nil),    // 3: protoc.ActionTraces
	(*ActionTrace)(nil),     // 4: protoc.ActionTrace
	(*UserInfo)(nil),        // 5: protoc.UserInfo
	(*TraceDetail)(nil),     // 6: protoc.TraceDetail
	(*TracerItem)(nil),      // 7: protoc.TracerItem
	(*TracerParams)(nil),    // 8: protoc.TracerParams
	(*TracerException)(nil), // 9: protoc.TracerException
	nil,                     // 10: protoc.TraceDetail.CustomEntry
	nil,                     // 11: protoc.TraceDetail.HealthEntry
	nil,                     // 12: protoc.TraceDetail.PostsEntry
	nil,                     // 13: protoc.TraceDetail.RequestHeaderEntry
	nil,                     // 14: protoc.TraceDetail.ResponseHeaderEntry
	nil,                     // 15: protoc.TraceDetail.SessionEntry
	nil,                     // 16: protoc.TracerItem.DatasEntry
}
var file_protoc_trace_proto_depIdxs = []int32{
	4,  // 0: protoc.ActionTraces.traces:type_name -> protoc.ActionTrace
	5,  // 1: protoc.ActionTrace.user:type_name -> protoc.UserInfo
	6,  // 2: protoc.ActionTrace.detail:type_name -> protoc.TraceDetail
	1,  // 3: protoc.ActionTrace.method:type_name -> protoc.HttpMethod
	2,  // 4: protoc.UserInfo.origin:type_name -> protoc.UserInfoOriginType
	10, // 5: protoc.TraceDetail.custom:type_name -> protoc.TraceDetail.CustomEntry
	7,  // 6: protoc.TraceDetail.tracers:type_name -> protoc.TracerItem
	11, // 7: protoc.TraceDetail.health:type_name -> protoc.TraceDetail.HealthEntry
	12, // 8: protoc.TraceDetail.posts:type_name -> protoc.TraceDetail.PostsEntry
	13, // 9: protoc.TraceDetail.requestHeader:type_name -> protoc.TraceDetail.RequestHeaderEntry
	14, // 10: protoc.TraceDetail.responseHeader:type_name -> protoc.TraceDetail.ResponseHeaderEntry
	15, // 11: protoc.TraceDetail.session:type_name -> protoc.TraceDetail.SessionEntry
	0,  // 12: protoc.TracerItem.type:type_name -> protoc.TracerType
	8,  // 13: protoc.TracerItem.params:type_name -> protoc.TracerParams
	16, // 14: protoc.TracerItem.datas:type_name -> protoc.TracerItem.DatasEntry
	9,  // 15: protoc.TracerItem.exception:type_name -> protoc.TracerException
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_protoc_trace_proto_init() }
func file_protoc_trace_proto_init() {
	if File_protoc_trace_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protoc_trace_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionTraces); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_trace_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionTrace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_trace_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_trace_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraceDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_trace_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TracerItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_trace_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TracerParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_trace_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TracerException); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protoc_trace_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protoc_trace_proto_goTypes,
		DependencyIndexes: file_protoc_trace_proto_depIdxs,
		EnumInfos:         file_protoc_trace_proto_enumTypes,
		MessageInfos:      file_protoc_trace_proto_msgTypes,
	}.Build()
	File_protoc_trace_proto = out.File
	file_protoc_trace_proto_rawDesc = nil
	file_protoc_trace_proto_goTypes = nil
	file_protoc_trace_proto_depIdxs = nil
}
